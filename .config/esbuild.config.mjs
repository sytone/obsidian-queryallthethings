import process from 'process';
import esbuild from 'esbuild';
import builtins from 'builtin-modules';
import copyFilePlugin from 'esbuild-plugin-copy-file';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source visit the plugins github repository
*/
`;

// If OBSIDIAN_ROOT is set in the environment then copy the files ove to make debugging faster.
let copyFilesConfig = {
    before: {
        // copy before bundling
    },
    after: {
        './dist/manifest.json': './manifest.json',
    },
};

if (process.env.OBSIDIAN_ROOT !== undefined) {
    console.log(`OBSIDIAN_ROOT set to ${process.env.OBSIDIAN_ROOT}`);
    copyFilesConfig.after[`${process.env.OBSIDIAN_ROOT}/.obsidian/plugins/qatt/manifest.json`] = './manifest.json';
    copyFilesConfig.after[`${process.env.OBSIDIAN_ROOT}/.obsidian/plugins/qatt/main.js`] = './dist/main.js';
    copyFilesConfig.after[`${process.env.OBSIDIAN_ROOT}/.obsidian/plugins/qatt/styles.css`] = './dist/styles.css';
} else {
    console.log(`OBSIDIAN_ROOT is not set`);
}

const prod = process.argv[2] === 'production';

const context = await esbuild.context({
    banner: {
        js: banner,
    },
    bundle: true,
    entryPoints: ['main.ts'],
    external: [
        'obsidian',
        'electron',
        '@codemirror/autocomplete',
        '@codemirror/collab',
        '@codemirror/commands',
        '@codemirror/language',
        '@codemirror/lint',
        '@codemirror/search',
        '@codemirror/state',
        '@codemirror/view',
        '@lezer/common',
        '@lezer/highlight',
        '@lezer/lr',
        ...builtins,
    ],
    format: 'cjs',
    logLevel: 'info',
    minify: prod,
    outfile: 'dist/main.js',
    plugins: [copyFilePlugin(copyFilesConfig)],
    sourcemap: prod ? false : 'inline',
    target: 'es2018',
    treeShaking: true,
});

if (prod) {
    await context.rebuild();
    process.exit(0);
} else {
    await context.watch();
}
